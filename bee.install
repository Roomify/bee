<?php

use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 */
function bee_install() {
  bat_event_create_state(
    [
      'name' => 'Available',
      'color' => '#42f649',
      'calendar_label' => 'AV',
      'blocking' => 0,
      'machine_name' => 'bee_daily_available',
      'event_type' => 'availability_daily',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Not available',
      'color' => '#f04b4b',
      'calendar_label' => 'N/A',
      'blocking' => 0,
      'machine_name' => 'bee_daily_not_available',
      'event_type' => 'availability_daily',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Booked',
      'color' => '#4b3cea',
      'calendar_label' => 'BOOK',
      'blocking' => 1,
      'machine_name' => 'bee_daily_booked',
      'event_type' => 'availability_daily',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Available',
      'color' => '#42f649',
      'calendar_label' => 'AV',
      'blocking' => 0,
      'machine_name' => 'bee_hourly_available',
      'event_type' => 'availability_hourly',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Not available',
      'color' => '#f04b4b',
      'calendar_label' => 'N/A',
      'blocking' => 0,
      'machine_name' => 'bee_hourly_not_available',
      'event_type' => 'availability_hourly',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Booked',
      'color' => '#4b3cea',
      'calendar_label' => 'BOOK',
      'blocking' => 1,
      'machine_name' => 'bee_hourly_booked',
      'event_type' => 'availability_hourly',
    ]
  )->save();

  user_role_change_permissions(RoleInterface::ANONYMOUS_ID, [
    'view calendar data for any availability_daily event' => TRUE,
    'view calendar data for any availability_hourly event' => TRUE,
  ]);

  user_role_change_permissions(RoleInterface::AUTHENTICATED_ID, [
    'view calendar data for any availability_daily event' => TRUE,
    'view calendar data for any availability_hourly event' => TRUE,
  ]);
}

/**
 * Implements hook_uninstall().
 */
function bee_uninstall() {
  $node_types = \Drupal::entityTypeManager()->getStorage('node_type')->loadMultiple();

  foreach ($node_types as $node_type) {
    Drupal::configFactory()->getEditable('node.type.' . $node_type->id())->clear('bee')->save();

    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_availability_daily')->delete();
    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_availability_hourly')->delete();

    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_open_hours')->delete();
    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_use_open_hours')->delete();

    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_product')->delete();
    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_price')->delete();
    Drupal::configFactory()->getEditable('field.field.node.' . $node_type->id() . '.field_price_frequency')->delete();
  }

  Drupal::configFactory()->getEditable('field.storage.node.field_availability_daily')->delete();
  Drupal::configFactory()->getEditable('field.storage.node.field_availability_hourly')->delete();

  Drupal::configFactory()->getEditable('field.storage.node.field_open_hours')->delete();
  Drupal::configFactory()->getEditable('field.storage.node.field_use_open_hours')->delete();

  Drupal::configFactory()->getEditable('field.storage.node.field_product')->delete();
  Drupal::configFactory()->getEditable('field.storage.node.field_price')->delete();
  Drupal::configFactory()->getEditable('field.storage.node.field_price_frequency')->delete();

  $states = [
    'bee_daily_available',
    'bee_daily_not_available',
    'bee_daily_booked',
    'bee_hourly_available',
    'bee_hourly_not_available',
    'bee_hourly_booked',
  ];
  foreach ($states as $machine_name) {
    if ($state = bat_event_load_state_by_machine_name($machine_name)) {
      $state->delete();
    }
  }

  bat_event_delete_event_type_schema('availability_daily');
  bat_event_delete_event_type_schema('availability_hourly');
}

<?php

use Drupal\Core\Config\FileStorage;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 */
function bee_install() {
  bat_event_create_state(
    [
      'name' => 'Available',
      'color' => '#42f649',
      'calendar_label' => 'AV',
      'blocking' => 0,
      'machine_name' => 'bee_daily_available',
      'event_type' => 'availability_daily',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Not available',
      'color' => '#f04b4b',
      'calendar_label' => 'N/A',
      'blocking' => 0,
      'machine_name' => 'bee_daily_not_available',
      'event_type' => 'availability_daily',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Booked',
      'color' => '#4b3cea',
      'calendar_label' => 'BOOK',
      'blocking' => 1,
      'machine_name' => 'bee_daily_booked',
      'event_type' => 'availability_daily',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Available',
      'color' => '#42f649',
      'calendar_label' => 'AV',
      'blocking' => 0,
      'machine_name' => 'bee_hourly_available',
      'event_type' => 'availability_hourly',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Not available',
      'color' => '#f04b4b',
      'calendar_label' => 'N/A',
      'blocking' => 0,
      'machine_name' => 'bee_hourly_not_available',
      'event_type' => 'availability_hourly',
    ]
  )->save();

  bat_event_create_state(
    [
      'name' => 'Booked',
      'color' => '#4b3cea',
      'calendar_label' => 'BOOK',
      'blocking' => 1,
      'machine_name' => 'bee_hourly_booked',
      'event_type' => 'availability_hourly',
    ]
  )->save();

  user_role_change_permissions(RoleInterface::ANONYMOUS_ID, [
    'view calendar data for any availability_daily event' => TRUE,
    'view calendar data for any availability_hourly event' => TRUE,
  ]);

  user_role_change_permissions(RoleInterface::AUTHENTICATED_ID, [
    'view calendar data for any availability_daily event' => TRUE,
    'view calendar data for any availability_hourly event' => TRUE,
  ]);

  bee_event_series_types_add_fields();
}

/**
 * Implements hook_uninstall().
 */
function bee_uninstall() {
  $node_types = \Drupal::entityTypeManager()->getStorage('node_type')->loadMultiple();
  $entityFieldManager = Drupal::service('entity_field.manager');

  foreach ($node_types as $node_type) {
    $field_names = [
      'field_availability_daily',
      'field_availability_hourly',
      'field_open_hours',
      'field_use_open_hours',
      'field_product',
      'field_price',
      'field_price_frequency',
    ];
    $fields = $entityFieldManager->getFieldDefinitions('node', $node_type->id());

    foreach ($field_names as $field_name) {
      if (isset($fields[$field_name])) {
        $fields[$field_name]->delete();
      }
    }

    Drupal::configFactory()->getEditable('node.type.' . $node_type->id())->clear('bee')->save();
  }

  $states = [
    'bee_daily_available',
    'bee_daily_not_available',
    'bee_daily_booked',
    'bee_hourly_available',
    'bee_hourly_not_available',
    'bee_hourly_booked',
  ];
  foreach ($states as $machine_name) {
    if ($state = bat_event_load_state_by_machine_name($machine_name)) {
      $state->delete();
    }
  }

  bat_event_delete_event_type_schema('availability_daily');
  bat_event_delete_event_type_schema('availability_hourly');
}

/**
 * Add booking "Capacity" field.
 */
function bee_update_8001() {
  if (bat_booking_type_load('bee') !== NULL) {
    bee_create_booking_capacity_field();
  }
}

/**
 * Set cardinality as unlimited for the "booking_event_reference" field.
 */
function bee_update_8002() {
  if (bat_booking_type_load('bee') !== NULL) {
    bee_set_booking_event_reference_field_cardinality();
  }
}

/**
 * Enable module "BAT Event Series"
 */
function bee_update_8003() {
  \Drupal::service('module_installer')->install(['bat_event_series']);
}

/**
 * Import BAT Event series Types.
 */
function bee_update_8004() {
  $configs = [
    'bat_event_series.event_series_type.availability_daily',
    'bat_event_series.event_series_type.availability_hourly',
  ];

  $path = drupal_get_path('module', 'bee') . '/config/install';
  $source = new FileStorage($path);
  $config_storage = \Drupal::service('config.storage');
  foreach ($configs as $config) {
    $config_storage->write($config, $source->read($config));
  }

  bee_event_series_types_add_fields();
}

/**
 * Add booking fields "Repeat frequency" and "Repeat until".
 */
function bee_update_8005() {
  if (bat_booking_type_load('bee') !== NULL) {
    bee_create_booking_repeat_frequency_field();
    bee_create_booking_repeat_until_field();
  }
}

/**
 * Add booking "Event series" field.
 */
function bee_update_8006() {
  bee_create_booking_event_series_reference_field();
}

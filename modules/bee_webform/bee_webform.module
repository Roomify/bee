<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_form_alter().
 */
function bee_webform_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['#webform_id'])) {
    foreach ($form['elements'] as $element) {
      if ($element['#type'] == 'webform_bee_reservation_form') {
        $form['actions']['submit']['#submit'][] = 'bee_webform_form_submit';
      }
    }
  }
}

function bee_webform_form_submit($form, FormStateInterface $form_state) {
  foreach ($form['elements'] as $id => $element) {
    if ($element['#type'] == 'webform_bee_reservation_form') {
      $value = $form_state->getValue($id);

      if ($value['content_type'] && $value['start_date'] && $value['end_date'] && $value['capacity']) {
        $start_date = $value['start_date'];
        $end_date = $value['end_date'];

        $max_capacity = FALSE;

        $available_units = [];

        $query = \Drupal::entityQuery('node')
          ->condition('type', $value['content_type']);

        $nids = $query->execute();
        foreach (Node::loadMultiple($nids) as $node) {
          $values = [
            'node' => $node,
            'start_date' => $start_date,
            'end_date' => $end_date,
          ];

          if ($node_available_units = bee_webform_get_available_units($values)) {
            if (count($node_available_units) == $value['capacity']) {
              $available_units = [$node->id() => $node_available_units];
              break;
            }
            elseif (count($node_available_units) >= $value['capacity']) {
              $available_units = [$node->id() => $node_available_units];
              $max_capacity = TRUE;
            }
            elseif (!$max_capacity) {
              $available_units[$node->id()] = $node_available_units;
            }
          }
        }

        $index = 0;
        foreach ($available_units as $nid => $node_available_units) {
          $node = Node::load($nid);

          $bee_settings = \Drupal::config('node.type.' . $node->bundle())->get('bee');

          if ($bee_settings['bookable_type'] == 'daily') {
            $booked_state = bat_event_load_state_by_machine_name('bee_daily_booked');

            $start_date = new \DateTime($start_date);
            $end_date = new \DateTime($end_date);
          }
          else {
            $booked_state = bat_event_load_state_by_machine_name('bee_hourly_booked');

            $start_date = new \DateTime($start_date->format('Y-m-d H:i'));
            $end_date = new \DateTime($end_date->format('Y-m-d H:i'));
          }

          foreach ($node_available_units as $unit) {
            if ($bee_settings['bookable_type'] == 'daily') {
              $event = bat_event_create(['type' => 'availability_daily']);
              $event_dates = [
                'value' => $start_date->format('Y-m-d\TH:i:00'),
                'end_value' => $end_date->format('Y-m-d\TH:i:00'),
              ];
              $event->set('event_dates', $event_dates);
              $event->set('event_state_reference', $booked_state->id());
            }
            else {
              $event = bat_event_create(['type' => 'availability_hourly']);
              $event_dates = [
                'value' => $start_date->format('Y-m-d\TH:i:00'),
                'end_value' => $end_date->format('Y-m-d\TH:i:00'),
              ];
              $event->set('event_dates', $event_dates);
              $event->set('event_state_reference', $booked_state->id());
            }

            $event->set('event_bat_unit_reference', $unit);
            $event->save();

            if (++$index == $value['capacity']) {
              break 2;
            }
          }
        }
      }
    }
  }
}

/**
 * Get available Units.
 *
 * @param $values
 *
 * return array
 */
function bee_webform_get_available_units($values) {
  $node = $values['node'];
  $start_date = $values['start_date'];
  $end_date = $values['end_date'];

  $bee_settings = \Drupal::config('node.type.' . $node->bundle())->get('bee');

  $units_ids = [];
  foreach ($node->get('field_availability_' . $bee_settings['bookable_type']) as $unit) {
    $units_ids[] = $unit->entity->id();
  }

  if ($bee_settings['bookable_type'] == 'daily') {
    $start_date = new \DateTime($start_date);
    $end_date = new \DateTime($end_date);
    $end_date->sub(new \DateInterval('PT1M'));

    $available_units_ids = bat_event_get_matching_units($start_date, $end_date, ['bee_daily_available'], $bee_settings['type_id'], 'availability_daily');
  }
  else {
    $start_date = new \DateTime($start_date->format('Y-m-d H:i'));
    $end_date = new \DateTime($end_date->format('Y-m-d H:i'));
    $end_date->sub(new \DateInterval('PT1M'));

    $available_units_ids = bat_event_get_matching_units($start_date, $end_date, ['bee_hourly_available'], $bee_settings['type_id'], 'availability_hourly');
  }

  return array_intersect($units_ids, $available_units_ids);
}
